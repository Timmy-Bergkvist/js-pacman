{"version":3,"sources":["src/setup.js","src/ghostmoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","src/GameBoard.js","node_modules/@babel/runtime/helpers/defineProperty.js","src/Pacman.js","src/Ghost.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","WALLUR","WALLUL","WALLULR","WALLDR","WALLDL","WALLDLR","WALLUDR","WALLUDl","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","dotCount","grid","gameWin","div","document","createElement","classList","add","innerHTML","appendChild","level","style","cssText","forEach","square","i","push","pos","classes","remove","object","contains","deg","transform","character","shouldMove","getNextMove","bind","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startPos","e","keyCode","timer","powerPill","Ghost","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","moveCharacter","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AAuEO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAvEA,IAAMA,EAAY,GAuElB,QAAA,UAAA,EAtEA,IAAMC,EAAY,GAsElB,QAAA,UAAA,EArEA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkDP,QAAA,WAAA,EA9CA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QA0BN,QAAA,YAAA,EAtBA,IAAMC,EAAa,CACxBrB,EAAYC,MACZD,EAAYE,KACZF,EAAYW,IACZX,EAAYY,OACZZ,EAAYa,MACZb,EAAYc,KACZd,EAAYe,MACZf,EAAYgB,KACZhB,EAAYiB,OACZjB,EAAYoB,UACZpB,EAAYG,OACZH,EAAYI,OACZJ,EAAYK,QACZL,EAAYM,OACZN,EAAYO,OACZP,EAAYQ,QACZR,EAAYS,QACZT,EAAYU,SAIP,QAAA,WAAA,EAAA,IAAMY,EAAQ,CACnB,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5D,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EACpE,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EACrE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5D,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EACpE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5D,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAClE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9D,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GACjE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5D,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GACjE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC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","file":"js-pacman.3827e6a8.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 21;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  WALLUR: 'wallur', // ur = Up right\n  WALLUL: 'wallul', // ul = Up left\n  WALLULR: 'wallulr', // ulr = Up left right\n  WALLDR: 'walldr', // dr = down right\n  WALLDL: 'walldl', // dl = down left\n  WALLDLR: 'walldlr', // dlr = down left right\n  WALLUDR: 'walludr', // udr = up down right\n  WALLUDl: 'walludl', // udl = up down left\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair',\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK, // = 0\n  OBJECT_TYPE.WALL, // = 1\n  OBJECT_TYPE.DOT, // = 2\n  OBJECT_TYPE.BLINKY, // = 3\n  OBJECT_TYPE.PINKY, // = 4\n  OBJECT_TYPE.INKY, // = 5\n  OBJECT_TYPE.CLYDE, // = 6\n  OBJECT_TYPE.PILL, // = 7\n  OBJECT_TYPE.PACMAN, // = 8\n  OBJECT_TYPE.GHOSTLAIR, // = 9\n  OBJECT_TYPE.WALLUR, // ur = up right 10\n  OBJECT_TYPE.WALLUL, // ul = up left 11\n  OBJECT_TYPE.WALLULR, // ulr = up left right 12\n  OBJECT_TYPE.WALLDR, // dr = dr = down right 13\n  OBJECT_TYPE.WALLDL, // dl = up down left 14\n  OBJECT_TYPE.WALLDLR, // dlr = down left right 15\n  OBJECT_TYPE.WALLUDR, // udr = up down right 16\n  OBJECT_TYPE.WALLUDl, // udl = up down left 17\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 11, 10, 2, 11, 1, 1, 10, 2, 1, 2, 11, 1, 1, 10, 2, 11, 10, 2, 1,\n  1, 7, 13, 14, 2, 13, 1, 1, 14, 2, 15, 2, 13, 1, 1, 14, 2, 13, 14, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 17, 16, 2, 12, 2, 17, 1, 1, 1, 1, 1, 16, 2, 12, 2, 17, 16, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  13, 1, 1, 10, 2, 1, 1, 1, 16, 0, 15, 0, 17, 1, 1, 1, 2, 11, 1, 1, 14,\n  0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 0, 12, 9, 9, 9, 9, 9, 12, 0, 1, 2, 1, 0, 0, 0,\n  11, 1, 1, 14, 2, 15, 0, 1, 9, 9, 9, 9, 9, 1, 0, 15, 2, 13, 1, 1, 10,\n  1, 0, 0, 0, 2, 0, 0, 1, 9, 9, 9, 9, 9, 1, 0, 0, 2, 0, 0, 0, 1,\n  13, 1, 1, 10, 2, 12, 0, 1, 9, 9, 9, 9, 9, 1, 0, 12, 2, 11, 1, 1, 14,\n  0, 0, 0, 1, 2, 1, 0, 13, 1, 1, 1, 1, 1, 14, 0, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0,\n  11, 1, 1, 14, 2, 15, 0, 17, 1, 1, 1, 1, 1, 16, 0, 15, 2, 13, 1, 1, 10,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 17, 10, 2, 17, 1, 1, 16, 2, 15, 2, 17, 1, 1, 16, 2, 11, 16, 2, 1,\n  1, 7, 2, 1, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 7, 1,\n  1, 16, 2, 15, 2, 12, 2, 17, 1, 1, 1, 1, 1, 16, 2, 12, 2, 15, 2, 17, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 17, 1, 1, 1, 1, 1, 16, 2, 15, 2, 17, 1, 1, 1, 1, 1, 16, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\n\r\n// Random movement\r\nexport function randomMovement(position, direction, objectExist) {\r\n    let dir = direction;\r\n    let nextMovePos = position + dir.movement;\r\n    // Change an array from the direction object keys\r\n    const keys = Object.keys(DIRECTIONS);\r\n\r\n    while (\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLUR) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLUL) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLULR) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLDR) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLDL) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLDLR) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLUDR) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.WALLUDl) ||\r\n        objectExist(nextMovePos, OBJECT_TYPE.GHOST)\r\n    ) {\r\n        // Get a random key from that array\r\n        const key = keys[Math.floor(Math.random() * keys.length)];\r\n        // Set the new direction\r\n        dir = DIRECTIONS[key];\r\n        // Set the next move\r\n        nextMovePos = position + dir.movement;\r\n    }\r\n    return { nextMovePos, direction: dir };\r\n}\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\r\n\r\nclass GameBoard {\r\n    constructor(DOMGrid) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid = DOMGrid;\r\n    }\r\n\r\n    showGameStatus(gameWin) {\r\n        // Show game win or game over\r\n        const div = document.createElement('div');\r\n        div.classList.add('game-status');\r\n        div.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER!'}`;\r\n        this.DOMGrid.appendChild(div);\r\n    }\r\n\r\n    createGrid(level) {\r\n        this.dotCount = 0;\r\n        this.grid = [];\r\n        this.DOMGrid.innerHTML = '';\r\n        // First set correct amount of columns based on Grid Size and Cell Size\r\n        this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);`;\r\n\r\n        level.forEach((square, i) => {\r\n            const div = document.createElement('div');\r\n            div.classList.add('square', CLASS_LIST[square]);\r\n            div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\r\n            this.DOMGrid.appendChild(div);\r\n            this.grid.push(div);\r\n\r\n            // Add dots\r\n            if (CLASS_LIST[square] === OBJECT_TYPE.DOT) this.dotCount++;\r\n        });\r\n    }\r\n\r\n    addObject(pos, classes) {\r\n        this.grid[pos].classList.add(...classes);\r\n    }\r\n\r\n    removeObject(pos, classes) {\r\n        this.grid[pos].classList.remove(...classes);\r\n    }\r\n    // Can have an arrow function here cause of this binding\r\n    objectExist(pos, object) {\r\n        return this.grid[pos].classList.contains(object);\r\n      };\r\n\r\n    rotateDiv(pos, deg) {\r\n        this.grid[pos].style.transform = `rotate(${deg}deg)`;\r\n    }\r\n\r\n    moveCharacter(character) {\r\n        if (character.shouldMove()) {\r\n          const { nextMovePos, direction } = character.getNextMove(\r\n            this.objectExist.bind(this)\r\n          );\r\n          const { classesToRemove, classesToAdd } = character.makeMove();\r\n    \r\n          if (character.rotation && nextMovePos !== character.pos) {\r\n            // Rotate\r\n            this.rotateDiv(nextMovePos, character.dir.rotation);\r\n            // Rotate the previous div back\r\n            this.rotateDiv(character.pos, 0);\r\n          }\r\n    \r\n          this.removeObject(character.pos, classesToRemove);\r\n          this.addObject(nextMovePos, classesToAdd);\r\n    \r\n          character.setNewPos(nextMovePos, direction);\r\n        }\r\n      }\r\n    \r\n      static createGameBoard(DOMGrid, level) {\r\n        const board = new this(DOMGrid);\r\n        board.createGrid(level);\r\n        return board;\r\n      }\r\n}\r\n\r\nexport default GameBoard;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { OBJECT_TYPE, DIRECTIONS } from './setup';\r\n\r\nclass Pacman {\r\n    constructor(speed, startPos) {\r\n        this.pos = startPos;\r\n        this.speed = speed;\r\n        this.dir = null; // Direction\r\n        this.timer = 0;\r\n        this.powerPill = false;\r\n        this.rotation = true;\r\n    }\r\n\r\n    shouldMove() {\r\n        // Pacman does not move before a key is pressed\r\n        if (!this.dir) return;\r\n\r\n        if (this.timer === this.speed) {\r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n        this.timer++;\r\n    }\r\n\r\n    getNextMove(objectExist) {\r\n        let nextMovePos = this.pos + this.dir.movement;\r\n        // If Pacman collide with a wall\r\n        if (\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLUR) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLUL) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLULR) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLDR) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLDL) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLDLR) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLUDR) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.WALLUDl) ||\r\n            objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\r\n        ) {\r\n            nextMovePos = this.pos;\r\n        }\r\n\r\n        return { nextMovePos, direction: this.dir };\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.PACMAN];\r\n        const classesToAdd = [OBJECT_TYPE.PACMAN];\r\n\r\n        return { classesToRemove, classesToAdd };\r\n    }\r\n\r\n    setNewPos(nextMovePos) {\r\n        this.pos = nextMovePos;\r\n    }\r\n\r\n    handleKeyInput = (e, objectExist) => {\r\n        let dir;\r\n\r\n        if (e.keyCode >= 37 && e.keyCode <= 40) {\r\n            dir = DIRECTIONS[e.key];\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const nextMovePos = this.pos + dir.movement;\r\n        if (objectExist(nextMovePos, OBJECT_TYPE.WALL)) return;\r\n        this.dir = dir;\r\n    };\r\n}\r\n\r\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\nimport { randomMovement } from './ghostmoves';\r\n\r\nclass Ghost {\r\n    constructor(speed = 5, startPos, movement, name) {\r\n        this.name = name;\r\n        this.movement = movement;\r\n        this.startPos = startPos;\r\n        this.pos = startPos;\r\n        this.dir = DIRECTIONS.ArrowRight;\r\n        this.speed = speed;\r\n        this.timer = 0;\r\n        this.isScared = false;\r\n        this.rotation = false;\r\n    }\r\n    \r\n    shouldMove() {\r\n        if (this.timer === this.speed) {\r\n            this.timer = 0;\r\n            return true;\r\n        }\r\n        this.timer++;\r\n    }\r\n\r\n    getNextMove(objectExist) {\r\n        const { nextMovePos, direction } = this.movement(\r\n            this.pos,\r\n            this.dir,\r\n            objectExist\r\n        );\r\n        return { nextMovePos, direction };\r\n    }\r\n\r\n    makeMove() {\r\n        const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\r\n        let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\r\n\r\n        if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\r\n\r\n        return { classesToRemove, classesToAdd };\r\n    }\r\n\r\n    setNewPos(nextMovePos, direction) {\r\n        this.pos = nextMovePos;\r\n        this.dir = direction;\r\n    }\r\n}\r\n\r\nexport default Ghost;","import { LEVEL, OBJECT_TYPE } from './src/setup';\nimport { randomMovement } from './src/ghostmoves';\n\n// Classes\nimport GameBoard from './src/GameBoard';\nimport Pacman from './src/Pacman';\nimport Ghost from './src/Ghost';\n\n// Sounds\nimport soundDot from './sounds/munch.wav';\nimport soundPill from './sounds/pill.wav';\nimport soundGameStart from './sounds/game_start.wav';\nimport soundGameOver from './sounds/death.wav';\nimport soundGhost from './sounds/eat_ghost.wav';\n\n// DOM Element\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n// Game Constants\nconst POWER_PILL_TIME = 10000;\nconst GLOBAL_SPEED = 80;\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n// Initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n// Audio\nfunction playAudio(audio) {\n    const soundEffect = new Audio(audio);\n    soundEffect.play();\n}\n\nfunction gameOver(pacman, grid) {\n    playAudio(soundGameOver);\n\n    document.removeEventListener('keydown', (e) =>\n    pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n        gameBoard.showGameStatus(gameWin);\n\n        clearInterval(timer);\n\n       startButton.classList.remove('hide');\n\n}\n\nfunction checkCollision(pacman, ghosts) {\n    const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\n    if (collidedGhost) {\n        // pacman eats ghost\n        if (pacman.powerPill) {\n            playAudio(soundGhost);\n            gameBoard.removeObject(collidedGhost.pos, [\n                OBJECT_TYPE.GHOST,\n                OBJECT_TYPE.SCARED,\n                collidedGhost.name\n            ]);\n            collidedGhost.pos = collidedGhost.startPos;\n            score += 100; // For every ghost that is eaten gives 100 points\n        } else {\n            gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n            gameBoard.rotateDiv(pacman.pos, 0);\n            gameOver(pacman, gameGrid);\n        }\n    }\n}\n\nfunction gameLoop(pacman, ghosts) {\n    gameBoard.moveCharacter(pacman);\n    checkCollision(pacman, ghosts);\n\n    ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n    checkCollision(pacman, ghosts);\n\n    // Check if pacman eats a dot\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n        playAudio(soundDot);\n\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n        gameBoard.dotCount--;\n        score += 10; // For every dot that is eaten gives 10 points\n    }\n    // Check if pacman eats a powerPill\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n        playAudio(soundPill);\n\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\n        pacman.powerPill = true;\n        score += 50; // For every powerPill that is eaten gives 50 points\n\n        clearTimeout(powerPillTimer);\n        powerPillTimer = setTimeout(\n            () => (pacman.powerPill = false),\n            POWER_PILL_TIME\n        ); \n    }\n\n    // change ghost scare mode depending on powerPill\n    if (pacman.powerPill !== powerPillActive) {\n        powerPillActive = pacman.powerPill;\n        ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n    }\n\n    // check if all dots have been eaten\n    if (gameBoard.dotCount === 0) {\n        gameWin = true;\n        gameOver(pacman, gameGrid);\n    }\n\n    // show the score\n    scoreTable.innerHTML = score;\n\n}\n\nfunction startGame() {\n    playAudio(soundGameStart);\n\n    gameWin = false;\n    powerPillActive = false;\n    score = 0;\n\n    startButton.classList.add('hide');\n\n    gameBoard.createGrid(LEVEL);\n\n    const pacman = new Pacman(2, 388);\n    gameBoard.addObject(388, [OBJECT_TYPE.PACMAN]);\n    document.addEventListener('keydown', (e) => \n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n\n    const ghosts = [\n        // speed and driection\n        new Ghost(6, 200, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(2, 199, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 198, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 197, randomMovement, OBJECT_TYPE.CLYDE)\n    ];\n\n    // Gameloop\n  timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n// Initialize game\n\nstartButton.addEventListener('click', startGame);"]}